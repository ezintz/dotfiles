[core]
  ## Use a global customized `.gitignore` and `.gitattributes`.
  excludesfile = ~/.gitignore
  # attributesfile = ~/.gitattributes

  ## Make `git rebase` safer on OS X
  ## More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
  trustctime = false

  ## Prevent showing files whose names contain non-ASCII symbols as unversioned.
  ## http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
  precomposeunicode = false

  ## Treat spaces before tabs and all kinds of trailing whitespace as an error
  ## trailing-space: looks for spaces at the end of a line
  ## space-before-tab: looks for spaces before tabs at the beginning of a line
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol

  ## https://help.github.com/articles/dealing-with-line-endings
  autocrlf = input
  safecrlf = true

  ## Set atom as default editor
  editor = atom --wait

[alias]
  a      = add
  b      = branch
  bc     = checkout -b
  bl     = branch -v
  bL     = branch -av

  co     = checkout
  ci     = commit
  cia    = commit -a
  co     = checkout

  c      = commit -v
  ca     = commit --all
  cm     = commit --message
  cam    = commit --all --message
  camend = commit --amend --reuse-message HEAD
  cundo  = reset --soft "HEAD^"
  cp     = cherry-pick
  cr     = clone --recursive

  d      = diff          # Diff working dir to index
  ds     = diff --staged # Diff index to HEAD
  dc     = diff --staged # Diff index to HEAD
  dh     = diff HEAD     # Diff working dir and index to HEAD

  f      = fetch --prune
  fm     = pull
  fo     = fetch origin

  l      = log --topo-order --pretty=med -n 20
  ls     = log --topo-order --stat --no-merges --pretty=detailed
  ld     = log --topo-order --stat --patch --full-diff --no-merges --pretty=detailed
  lg     = log --topo-order --graph --abbrev-commit --decorate --pretty=brief
  lga    = log --topo-order --graph --abbrev-commit --decorate --all --pretty=brief
  lh     = shortlog --summary --numbered

  m      = merge
  mom    = merge origin/master
  mod    = merge origin/develop

  p      = push
  pa     = push --all
  pt     = push --tags

  s      = status -s
  st     = status

  sl     = stash list
  sa     = stash apply
  ss     = stash save

  sm     = submodule
  smu    = submodule foreach git pull origin master

  alias       = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\\t => \\2/' | sort
  tags        = tag -l --sort=v:refname
  branches    = branch -a
  remotes     = remote -v

  re  = remote
  rel = remote --verbose
  rea = remote add
  rex = remote rm
  rem = remote rename

  vtreelog = log --all --graph --decorate=short --color --format=vtree
  lt = !bash -c '"\
      while IFS=+ read -r hash time branch message; do\
        timelength=$(echo \"$time\" | sed -r \"s:[^ ][[]([0-9]{1,2}(;[0-9]{1,2})?)?m::g\");\
        timelength=$(echo \"16+${#time}-${#timelength}\" | bc);\
        printf \"%${timelength}s    %s %s %s\n\" \"$time\" \"$hash\" \"$branch\" \"$message\";\
      done < <(git vtreelog && echo) | less -EFRXS"'

  # All commits since yesterday.
  standup = log --pretty=one --since=yesterday

  # All commits since midnight.
  today = log --pretty=one --since=midnight

  # Find out who is currently active on the repository
  who = log --pretty=med --no-merges

[pretty]
  brief = "%C(yellow)%h%C(reset) %C(blue)%cr%C(reset) by %C(cyan)%cn%C(reset) %s %C(red)%d%C(reset)"
  med = "%n%C(bold)%C(yellow)Commit: %C(yellow)%H%C(reset)%n%C(bold)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B"
  detailed = "%n%C(bold)%C(yellow)Commit: %C(yellow)%H%C(red)%d%C(reset)%n%C(bold)Author:%C(reset) %C(cyan)%an <%ae>%n%C(bold)Date:%C(reset)   %C(blue)%ai (%ar)%C(reset)%n%+B"
  vtree = %C(bold blue)%h%C(reset)+%C(bold black)(%cr)%C(reset)+%C(auto)%D%C(reset)++\n+++       %C(bold black)%an%C(reset)%C(black):%C(reset) %s

[color]
  branch      = auto
  diff        = auto
  interactive = auto
  showbranch  = true
  status      = auto
  pager       = true
  ui          = true

[color "branch"]
  plain    = yellow
  current  = magenta bold
  local    = blue bold
  remote   = white
  upstream = green bold

  #current = yellow reverse
  #local   = yellow
  #remote  = green

[color "diff"]
  plain      = normal
  old        = red
  new        = green
  commit     = yellow
  meta       = blue
  frag       = cyan
  func       = yellow bold
  whitespace = red reverse
  #meta = yellow bold
  #frag = magenta bold
  #old = red bold
  #new = green bold
  #whitespace = white reverse

[color "status"]
  header    = black bold
  added     = green bold
  changed   = red
  untracked = blue bold
  branch    = green bold
  nobranch  = red

  # header = normal
  # added = green
  # changed = blue
  # untracked = yellow
  # branch = green
  # nobranch = red

[diff]
  tool = vimdiff

[difftool "vimdiff"]
  prompt = false

[difftool "phpstorm"]
  cmd = /Applications/PhpStorm.app/Contents/MacOS/phpstorm diff $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE")

[merge]
  # Include summaries of merged commits in newly created merge commit messages.
  summary = true
  stat = true
  tool = phpstorm

[mergetool]
  keepBackup = true
  prompt = false
  writeToTemp = true

[mergetool "phpstorm"]
  cmd = /Applications/PhpStorm.app/Contents/MacOS/phpstorm merge $(cd $(dirname "$LOCAL") && pwd)/$(basename "$LOCAL") $(cd $(dirname "$REMOTE") && pwd)/$(basename "$REMOTE") $(cd $(dirname "$BASE") && pwd)/$(basename "$BASE") $(cd $(dirname "$MERGED") && pwd)/$(basename "$MERGED")
  trustExitCode = true

[filter "lfs"]
  clean = git lfs clean %f
  smudge = git lfs smudge %f
  required = true

# github://<user>/<project>
[url "git@github.com:"]
  insteadOf = "github.com://"
  pushInsteadOf = "github://"
  pushInsteadOf = "git://github.com"

# gist://<id>
[url "git@gist.github.com:"]
  insteadOf = "gist://"
  pushInsteadOf = "gist://"
  pushInsteadOf = "git://gist.github.com"

# bitbucket://<user>/<project>
[url "git@bitbucket.com:"]
  insteadOf = "bitbucket.com://"
  pushInsteadOf = "bitbucket://"
  pushInsteadOf = "git://bitbucket.com"
